{"version":3,"file":"todolistitem.min.js","sources":["../../../src/local/components/todolistitem.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Todo list reactive component.\n *\n * @module     block_todo/local/components/todolistitem\n * @copyright  2023 Mikel Mart√≠n <mikel@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {todoReactive} from 'block_todo/local/todo';\n\nexport default class extends BaseComponent {\n    /**\n     * Create the todo list component.\n     */\n    create() {\n        this.name = 'todolistitem';\n        this.selectors = {\n            TODO: `[data-for='todo']`,\n            TODONAME: `[data-for='todo-name']`,\n            TODOCHECK: `[data-for='todo-check']`,\n            DELETEBUTTON: `[data-action='delete-todo']`,\n        };\n        this.classes = {\n            DONE: `todo-done`,\n        };\n        // We need our id to watch specific events.\n        this.id = this.element.dataset.id;\n    }\n\n    /**\n     * Create a component instance from the mustache template.\n     *\n     * @param {string} target the DOM main element selector\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new this({\n            element: document.querySelector(target),\n            reactive: todoReactive,\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {object} state the initial state\n     */\n    stateReady(state) {\n        this.addEventListener(this.getElement(this.selectors.DELETEBUTTON), 'click', this._deleteTodoListener);\n        this.addEventListener(this.getElement(this.selectors.TODOCHECK), 'click', this._toggleTodoListener);\n        // TODO: Probably this is not necessary.\n        const todo = state.todos.get(this.id);\n        this._refreshTodo({element: todo});\n    }\n\n    /**\n     * Define the component watchers.\n     *\n     * @returns {Array} the list of watchers\n     */\n    getWatchers() {\n        return [\n            {watch: `todos[${this.id}]:updated`, handler: this._refreshTodo},\n            {watch: `todos[${this.id}]:deleted`, handler: this.remove},\n        ];\n    }\n\n    /**\n     * Refresh the todo element.\n     *\n     * @param {object} param the watcher param\n     * @param {object} param.element the todo structure to refresh\n     */\n    _refreshTodo({element}) {\n        this.element.classList.toggle(this.classes.DONE, element.done ?? false);\n        this.getElement(this.selectors.TODOCHECK).checked = element.done ?? false;\n        this.getElement(this.selectors.TODONAME).textContent = element.name;\n    }\n\n    /**\n     * Delete todo.\n     * @param {Event} event the event\n     */\n    _deleteTodoListener(event) {\n        event.preventDefault();\n        this.reactive.dispatch('deleteTodo', this.getElement().dataset.id);\n    }\n\n    /**\n     * Toggle todo \"done\" status.\n     */\n    _toggleTodoListener() {\n        this.reactive.dispatch('toggleTodo', this.getElement().dataset.id);\n    }\n}\n"],"names":["BaseComponent","create","name","selectors","TODO","TODONAME","TODOCHECK","DELETEBUTTON","classes","DONE","id","this","element","dataset","target","document","querySelector","reactive","todoReactive","stateReady","state","addEventListener","getElement","_deleteTodoListener","_toggleTodoListener","todo","todos","get","_refreshTodo","getWatchers","watch","handler","remove","classList","toggle","done","checked","textContent","event","preventDefault","dispatch"],"mappings":";;;;;;;;uBA0B6BA,wBAIzBC,cACSC,KAAO,oBACPC,UAAY,CACbC,yBACAC,kCACAC,oCACAC,iDAECC,QAAU,CACXC,uBAGCC,GAAKC,KAAKC,QAAQC,QAAQH,eAUvBI,OAAQX,kBACT,IAAIQ,KAAK,CACZC,QAASG,SAASC,cAAcF,QAChCG,SAAUC,mBACVf,UAAAA,YASRgB,WAAWC,YACFC,iBAAiBV,KAAKW,WAAWX,KAAKR,UAAUI,cAAe,QAASI,KAAKY,0BAC7EF,iBAAiBV,KAAKW,WAAWX,KAAKR,UAAUG,WAAY,QAASK,KAAKa,2BAEzEC,KAAOL,MAAMM,MAAMC,IAAIhB,KAAKD,SAC7BkB,aAAa,CAAChB,QAASa,OAQhCI,oBACW,CACH,CAACC,sBAAgBnB,KAAKD,gBAAeqB,QAASpB,KAAKiB,cACnD,CAACE,sBAAgBnB,KAAKD,gBAAeqB,QAASpB,KAAKqB,SAU3DJ,wDAAahB,QAACA,mBACLA,QAAQqB,UAAUC,OAAOvB,KAAKH,QAAQC,2BAAMG,QAAQuB,mDACpDb,WAAWX,KAAKR,UAAUG,WAAW8B,+BAAUxB,QAAQuB,oDACvDb,WAAWX,KAAKR,UAAUE,UAAUgC,YAAczB,QAAQV,KAOnEqB,oBAAoBe,OAChBA,MAAMC,sBACDtB,SAASuB,SAAS,aAAc7B,KAAKW,aAAaT,QAAQH,IAMnEc,2BACSP,SAASuB,SAAS,aAAc7B,KAAKW,aAAaT,QAAQH"}