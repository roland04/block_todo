{"version":3,"file":"todolist.min.js","sources":["../../../src/local/components/todolist.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Todo list reactive component.\n *\n * @module     block_todo/local/components/todolist\n * @copyright  2023 Mikel Mart√≠n <mikel@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {todoReactive} from 'block_todo/local/todo';\n\nexport default class extends BaseComponent {\n    /**\n     * Create the todo list component.\n     */\n    create() {\n        this.name = 'todolist';\n        this.selectors = {\n            TODOLIST: `[data-for='todo-list']`,\n            TODOS: `[data-for='todos']`,\n        };\n    }\n\n    /**\n     * Create a component instance from the mustache template.\n     *\n     * @param {string} target the DOM main element selector\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new this({\n            element: document.querySelector(target),\n            reactive: todoReactive,\n            selectors,\n        });\n    }\n\n    /**\n     * Define the component watchers.\n     *\n     * @returns {Array} the list of watchers\n     */\n    getWatchers() {\n        return [\n            {watch: `todos:created`, handler: this._addTodo},\n        ];\n    }\n\n    /**\n     * Add a todo element.\n     *\n     * @param {object} param the watcher param\n     * @param {object} param.element the todo structure to refresh\n     */\n    async _addTodo({element}) {\n        // Create a fake element to render the component.\n        const fakeElement = document.createElement('li');\n        fakeElement.classList.add('d-none');\n        this.getElement(this.selectors.TODOS).appendChild(fakeElement);\n        // Render the component.\n        const data = { // TODO: Better way to create data?\n            'id': element.id,\n            'name': element.name,\n            'done': false,\n        };\n        const newcomponent = await this.renderComponent(fakeElement, 'block_todo/local/todolistitem', data);\n        fakeElement.parentNode.replaceChild(newcomponent.getElement(), fakeElement);\n    }\n}\n"],"names":["BaseComponent","create","name","selectors","TODOLIST","TODOS","target","this","element","document","querySelector","reactive","todoReactive","getWatchers","watch","handler","_addTodo","fakeElement","createElement","classList","add","getElement","appendChild","data","id","newcomponent","renderComponent","parentNode","replaceChild"],"mappings":";;;;;;;;uBA0B6BA,wBAIzBC,cACSC,KAAO,gBACPC,UAAY,CACbC,kCACAC,wCAWIC,OAAQH,kBACT,IAAII,KAAK,CACZC,QAASC,SAASC,cAAcJ,QAChCK,SAAUC,mBACVT,UAAAA,YASRU,oBACW,CACH,CAACC,sBAAwBC,QAASR,KAAKS,oCAUhCR,QAACA,oBAENS,YAAcR,SAASS,cAAc,MAC3CD,YAAYE,UAAUC,IAAI,eACrBC,WAAWd,KAAKJ,UAAUE,OAAOiB,YAAYL,mBAE5CM,KAAO,IACHf,QAAQgB,QACNhB,QAAQN,WACR,GAENuB,mBAAqBlB,KAAKmB,gBAAgBT,YAAa,gCAAiCM,MAC9FN,YAAYU,WAAWC,aAAaH,aAAaJ,aAAcJ"}