{"version":3,"file":"todoinput.min.js","sources":["../../../src/local/components/todoinput.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Todo input reactive component.\n *\n * @module     block_todo/local/components/todoinput\n * @copyright  2023 Mikel Mart√≠n <mikel@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {todoReactive} from 'block_todo/local/todo';\n\nexport default class extends BaseComponent {\n    /**\n     * Create the todo input component.\n     */\n    create() {\n        this.name = 'todoinput';\n        this.selectors = {\n            ADDBUTTON: `[data-action='addtodo']`,\n            INPUTTEXT: `[data-for='todo-input']`,\n        };\n    }\n\n    /**\n     * Create a component instance from the mustache template.\n     *\n     * @param {string} target the DOM main element selector\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new this({\n            element: document.querySelector(target),\n            reactive: todoReactive,\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     */\n    stateReady() {\n        this.addEventListener(this.getElement(this.selectors.ADDBUTTON), 'click', this._addTodoListener);\n        this.addEventListener(this.getElement(this.selectors.INPUTTEXT), 'keyup', this._addTodoListener);\n    }\n\n    /**\n     * Add a new todo.\n     * @param {Event} event the event\n     */\n    _addTodoListener(event) {\n        event.preventDefault();\n        if (event.type === 'keyup' && event.keyCode !== 13) {\n            return;\n        }\n        const input = this.getElement(this.selectors.INPUTTEXT);\n        if (input.value.length === 0) {\n            return;\n        }\n        this.reactive.dispatch('addTodo', {name: input.value, done: false});\n        input.value = '';\n    }\n}\n"],"names":["BaseComponent","create","name","selectors","ADDBUTTON","INPUTTEXT","target","this","element","document","querySelector","reactive","todoReactive","stateReady","addEventListener","getElement","_addTodoListener","event","preventDefault","type","keyCode","input","value","length","dispatch","done"],"mappings":";;;;;;;;uBA0B6BA,wBAIzBC,cACSC,KAAO,iBACPC,UAAY,CACbC,oCACAC,iDAWIC,OAAQH,kBACT,IAAII,KAAK,CACZC,QAASC,SAASC,cAAcJ,QAChCK,SAAUC,mBACVT,UAAAA,YAORU,kBACSC,iBAAiBP,KAAKQ,WAAWR,KAAKJ,UAAUC,WAAY,QAASG,KAAKS,uBAC1EF,iBAAiBP,KAAKQ,WAAWR,KAAKJ,UAAUE,WAAY,QAASE,KAAKS,kBAOnFA,iBAAiBC,UACbA,MAAMC,iBACa,UAAfD,MAAME,MAAsC,KAAlBF,MAAMG,qBAG9BC,MAAQd,KAAKQ,WAAWR,KAAKJ,UAAUE,WAClB,IAAvBgB,MAAMC,MAAMC,cAGXZ,SAASa,SAAS,UAAW,CAACtB,KAAMmB,MAAMC,MAAOG,MAAM,IAC5DJ,MAAMC,MAAQ"}