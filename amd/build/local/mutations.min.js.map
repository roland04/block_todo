{"version":3,"file":"mutations.min.js","sources":["../../src/local/mutations.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Mutations class.\n *\n * @module     block_todo/local/mutations\n * @copyright  2023 Mikel Mart√≠n <mikel@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nclass Mutations {\n    /**\n     * Add a new todo.\n     *\n     * @param {StateManager} stateManager the current state\n     * @param {object} todo the todo to add\n     */\n    addTodo(stateManager, todo) {\n        const state = stateManager.state;\n        stateManager.setReadOnly(false);\n        // TODO: Generate a propper id.\n        const id = Math.floor(Math.random() * 1000);\n        state.todos.add({id, ...todo});\n        stateManager.setReadOnly(true);\n    }\n\n    /**\n     * Add a new todo.\n     *\n     * @param {StateManager} stateManager the current state\n     * @param {Number} todoId the todo to add\n     */\n    deleteTodo(stateManager, todoId) {\n        const state = stateManager.state;\n        stateManager.setReadOnly(false);\n        state.todos.delete(todoId);\n        stateManager.setReadOnly(true);\n    }\n\n    /**\n     * Toggle todo \"done\" status.\n     *\n     * @param {StateManager} stateManager the current state\n     * @param {Number} todoId the todo to add\n     */\n    toggleTodo(stateManager, todoId) {\n        const state = stateManager.state;\n        stateManager.setReadOnly(false);\n        const todo = state.todos.get(todoId);\n        todo.done = !todo.done;\n        stateManager.setReadOnly(true);\n    }\n}\n\nexport const mutations = new Mutations();\n"],"names":["mutations","addTodo","stateManager","todo","state","setReadOnly","id","Math","floor","random","todos","add","deleteTodo","todoId","delete","toggleTodo","get","done"],"mappings":"4JAkEaA,UAAY;;;;;;;;MArCrBC,QAAQC,aAAcC,YACZC,MAAQF,aAAaE,MAC3BF,aAAaG,aAAY,SAEnBC,GAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3BL,MAAMM,MAAMC,IAAI,CAACL,GAAAA,MAAOH,OACxBD,aAAaG,aAAY,GAS7BO,WAAWV,aAAcW,cACfT,MAAQF,aAAaE,MAC3BF,aAAaG,aAAY,GACzBD,MAAMM,MAAMI,OAAOD,QACnBX,aAAaG,aAAY,GAS7BU,WAAWb,aAAcW,cACfT,MAAQF,aAAaE,MAC3BF,aAAaG,aAAY,SACnBF,KAAOC,MAAMM,MAAMM,IAAIH,QAC7BV,KAAKc,MAAQd,KAAKc,KAClBf,aAAaG,aAAY"}